// <auto-generated />
using System;
using LibraryApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(LibrosDBContext))]
    [Migration("20250807043337_SeedLibros")]
    partial class SeedLibros
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryApp.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autor = "Gabriel García Márquez",
                            Disponible = true,
                            Titulo = "Cien años de soledad"
                        },
                        new
                        {
                            Id = 2,
                            Autor = "George Orwell",
                            Disponible = true,
                            Titulo = "1984"
                        },
                        new
                        {
                            Id = 3,
                            Autor = "Antoine de Saint-Exupéry",
                            Disponible = true,
                            Titulo = "El principito"
                        },
                        new
                        {
                            Id = 4,
                            Autor = "Miguel de Cervantes",
                            Disponible = true,
                            Titulo = "Don Quijote de la Mancha"
                        },
                        new
                        {
                            Id = 5,
                            Autor = "J.K. Rowling",
                            Disponible = true,
                            Titulo = "Harry Potter y la piedra filosofal"
                        },
                        new
                        {
                            Id = 6,
                            Autor = "Dan Brown",
                            Disponible = true,
                            Titulo = "El código Da Vinci"
                        },
                        new
                        {
                            Id = 7,
                            Autor = "Yuval Noah Harari",
                            Disponible = true,
                            Titulo = "Sapiens: De animales a dioses"
                        },
                        new
                        {
                            Id = 8,
                            Autor = "Suzanne Collins",
                            Disponible = true,
                            Titulo = "Los juegos del hambre"
                        },
                        new
                        {
                            Id = 9,
                            Autor = "Gabriel García Márquez",
                            Disponible = true,
                            Titulo = "Crónica de una muerte anunciada"
                        },
                        new
                        {
                            Id = 10,
                            Autor = "J.R.R. Tolkien",
                            Disponible = true,
                            Titulo = "El Hobbit"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estudiante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("LibraryApp.Models.Prestamo", b =>
                {
                    b.HasOne("LibraryApp.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });
#pragma warning restore 612, 618
        }
    }
}
